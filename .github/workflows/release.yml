name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Unix)
        if: runner.os != 'Windows'
        run: strip target/${{ matrix.target }}/release/gribble

      - name: Create archive (Unix)
        if: runner.os != 'Windows'
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/gribble dist/gribble-${{ matrix.target }}
          tar -czf dist/gribble-${{ matrix.target }}.tar.gz -C dist gribble-${{ matrix.target }}

      - name: Create archive (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir dist
          cp target/${{ matrix.target }}/release/gribble.exe dist/gribble-${{ matrix.target }}.exe
          powershell Compress-Archive -Path dist/gribble-${{ matrix.target }}.exe -DestinationPath dist/gribble-${{ matrix.target }}.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gribble-${{ matrix.target }}
          path: dist/
          retention-days: 1

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          find artifacts -name "*.tar.gz" -exec cp {} release-assets/ \;
          find artifacts -name "*.zip" -exec cp {} release-assets/ \;

      - name: Extract tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -n "$PREV_TAG" ]; then
            # Generate changelog from commits between tags
            CHANGELOG=$(git log --pretty=format:"- %s" $PREV_TAG..HEAD | head -20)
          else
            # First release - show recent commits
            CHANGELOG=$(git log --pretty=format:"- %s" --max-count=20)
          fi
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          body: |
            ## What's Changed
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Downloads
            
            Choose the appropriate binary for your platform:
            - **Linux (x86_64)**: `gribble-x86_64-unknown-linux-gnu.tar.gz`
            - **Windows (x64)**: `gribble-x86_64-pc-windows-msvc.zip`
            - **macOS (Intel)**: `gribble-x86_64-apple-darwin.tar.gz`
            - **macOS (Apple Silicon)**: `gribble-aarch64-apple-darwin.tar.gz`
            
            ### Installation
            
            **Linux/macOS:**
            ```bash
            tar -xzf gribble-x86_64-unknown-linux-gnu.tar.gz
            sudo mv gribble-x86_64-unknown-linux-gnu /usr/local/bin/gribble
            ```
            
            **Windows:**
            Extract the zip file and add the directory to your PATH.
          files: release-assets/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
